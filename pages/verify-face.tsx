import { useEffect, useRef, useState } from 'react'; import Layout from '../components/Layout';
export default function VerifyFace(){
  const videoRef=useRef<HTMLVideoElement|null>(null); const canvasRef=useRef<HTMLCanvasElement|null>(null);
  const [verified,setVerified]=useState(false); const [error,setError]=useState<string>('');
  async function start(){ try{ const stream=await navigator.mediaDevices.getUserMedia({video:{facingMode:'user'},audio:false}); if(videoRef.current){ videoRef.current.srcObject=stream as any; } }catch(e:any){ setError(e.message);} }
  function capture(){ try{ const v=videoRef.current!, c=canvasRef.current!, ctx=c.getContext('2d')!; const vw=v.videoWidth, vh=v.videoHeight; const size=Math.min(vw,vh)||240; c.width=240; c.height=240; ctx.drawImage(v,(vw-size)/2,(vh-size)/2,size,size,0,0,240,240); const pix=ctx.getImageData(0,0,240,240).data; let nonZero=0; for(let i=0;i<pix.length;i+=4){ if(pix[i]+pix[i+1]+pix[i+2]>30){ nonZero++; if(nonZero>5000) break; } } setVerified(nonZero>5000); }catch(e:any){ setError(e.message);} }
  useEffect(()=>{start();},[]);
  return (<Layout title="Face verification â€” FixFind"><section className="container" style={{paddingTop:16}}><h1>Face verification</h1><p className="muted">Live capture (demo). Connect KYC provider for production.</p><div style={{display:'grid',gridTemplateColumns:'1fr 240px',gap:16,alignItems:'start'}}><video ref={videoRef} autoPlay playsInline muted style={{width:'100%',borderRadius:16,border:'1px solid #eee'}}/><div><canvas ref={canvasRef} width={240} height={240} style={{borderRadius:16,border:'1px solid #eee'}}/><button className="btn" style={{width:'100%',marginTop:8}} onClick={capture}>Capture</button><div className="muted" style={{fontSize:14,marginTop:6}}>Status: {verified? <strong style={{color:'var(--emerald)'}}>Verified (demo)</strong> : 'Not verified'}</div>{error && <div style={{color:'crimson',fontSize:12,marginTop:6}}>Error: {error}</div>}</div></div></section></Layout>);
}
